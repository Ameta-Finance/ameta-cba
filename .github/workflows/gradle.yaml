name: Fineract Gradle Build

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: kamiazya/setup-graphviz@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Build with Gradle 1/2
        run: ./gradlew clean bootJar

      - name: Build with Gradle 2/2
        run: ./gradlew bootJar docker dockerPush -q -x rat -x compileTestJava -x test

      # - name: tag, and push image to Amazon ECR
      #   id: push-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: fineract-vfd
      #     IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
      #   run: |
      #     # Build a docker container and
      #     # push it to ECR so that it can
      #     # be deployed to ECS.
      #     docker tag docker.pkg.github.com/fiter1/fineract/fineract-vfd:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"